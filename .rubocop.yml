AllCops:
  TargetRubyVersion: 2.7

Layout/CommentIndentation:
  Enabled: false

Layout/CaseIndentation:
  IndentOneStep: true

Layout/EmptyLineBetweenDefs:
  AllowAdjacentOneLineDefs: true

Layout/FirstArgumentIndentation:
  EnforcedStyle: consistent

Layout/FirstArrayElementIndentation:
  EnforcedStyle: consistent

Layout/HashAlignment:
  EnforcedHashRocketStyle: [key, table]
  EnforcedColonStyle: [key, table]

Layout/IndentationWidth:
  Width: 1 # 1 Tab. I will surely not use spaces.

Layout/LineLength:
  Max: 340

Layout/Tab:
  Enabled: false

Metrics/AbcSize:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/BlockNesting:
  Enabled: false # Max. 3 levels?! Oh yeah!

Metrics/ClassLength: # WTF?!
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/MethodLength: # Method length?! What the heck?
  Enabled: false

Metrics/ParameterLists: # Pfffff...
  Enabled: false

Metrics/PerceivedComplexity:
  Enabled: false

Naming/MethodName:
  Enabled: false

Naming/MethodParameterName:
  Enabled: false # Has no option to allow camel case.

Naming/ConstantName:
  Enabled: false

Naming/VariableName:
  Enabled: false

Naming/VariableNumber:
  Enabled: false

Style/AsciiComments:
  Enabled: false

Style/ClassVars:
  Enabled: false # I know how to use class variables...

Style/CommentedKeyword:
  Enabled: false

Style/For:
  Enabled: false

Style/FrozenStringLiteralComment:
  Enabled: false

Style/GlobalVars:
  Enabled: false

Style/HashEachMethods:
  Enabled: true

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

Style/IfInsideElse:
  AllowIfModifier: true

Style/Lambda:
  Enabled: false

Style/MethodCallWithArgsParentheses:
  Enabled: true # Disabled by default
  AllowParenthesesInMultilineCall: true
  AllowParenthesesInChaining: true
  AllowParenthesesInCamelCaseMethod: true

# I wish this could be configured to enforce parens for calls without args.
# Very bad to get used to omitting them: In JS/TS, you end up assigning/passing
# the function itself instead of the return value. Experienced this right now.
Style/MethodCallWithoutArgsParentheses:
  Enabled: false

Style/ParallelAssignment: # But of course I will use that! Let me guess: It's too "cryptic", right?
  Enabled: false

# Some cops are really funny, but this one beats them all:
# "Donâ€™t use the cryptic Perl-legacy variables denoting last regexp group matches ($1, $2, etc). Use Regexp.last_match(n) instead."
# Since when has Perl ever been cryptic?! Anyway, I prefer "cryptic" over lengthy.
Style/PerlBackrefs:
  Enabled: false

Style/RegexpLiteral:
  AllowInnerSlashes: true

Style/SingleLineMethods:
  Enabled: false

Style/SymbolArray:
  EnforcedStyle: brackets

Style/TrailingCommaInArguments:
  Enabled: false

Style/TrailingCommaInArrayLiteral:
  Enabled: false

Style/TrailingCommaInHashLiteral:
  Enabled: false
